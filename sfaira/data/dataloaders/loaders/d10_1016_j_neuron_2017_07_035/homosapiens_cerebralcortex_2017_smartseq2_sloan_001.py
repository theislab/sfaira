import anndata
import os
import scipy.sparse
import numpy as np

# the data_dir argument will be automatically set by sfaira to the folder where your datafiles lie
def load(data_dir, **kwargs):
    
    fn = os.path.join(data_dir, "GSE99951_all_data_htseq_out.csv.gz")
    adata = anndata.read_csv(fn, delimiter=" ").T
    
    age_dict = {
        "1001000078": "100",
        "1001000061": "130",
        "1001000062": "130",
        "1001000288": "130",
        "1001000289": "130",
        "1001000290": "130",
        "1001000291": "130",
        "1001000081": "175",
        "1001000084": "175",
        "1001000209": "450",
        "1001000210": "450",
        "1001000212": "450",
        "1001000213": "450"}
    
    age = []
    for i in adata.obs.index:
        ii = i.split(".")
        age.append(age_dict[ii[0]])
    
    adata.obs['dev_age'] = age
    adata.obs["organoid_age_days"] = age
    
    adata.obs["cell_type"] = np.array(['neuron', 'glia1.0', 'glia1.0', 'neuron', 'glia1.0', 'neuron',
       'glia1.0', 'glia1.0', 'glia1.0', 'glia1.0', 'neuron', 'neuron',
       'neuron', 'neuron', 'neuron', 'glia1.0', 'glia1.0', 'neuron',
       'glia1.0', 'glia1.0', 'glia1.0', 'neuron', 'neuron', 'glia1.0',
       'glia1.0', 'neuron', 'neuron', 'glia1.0', 'neuron', 'neuron',
       'glia1.0', 'neuron', 'glia1.0', 'neuron', 'glia1.0', 'glia1.0',
       'glia1.0', 'neuron', 'glia1.0', 'neuron', 'glia1.0', 'neuron',
       'glia1.0', 'neuron', 'neuron', 'neuron', 'glia1.0', 'glia1.0',
       'neuron', 'glia1.0', 'neuron', 'glia1.0', 'glia1.0', 'glia1.0',
       'neuron', 'neuron', 'glia1.0', 'glia1.0', 'glia1.0', 'glia1.0',
       'neuron', 'glia1.0', 'neuron', 'glia1.0', 'glia1.0', 'glia2.0',
       'neuron', 'neuron', 'glia1.0', 'glia1.0', 'glia1.0', 'neuron',
       'neuron', 'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0', 'glia2.0',
       'glia3.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia1.0', 'glia1.0', 'glia2.0', 'glia3.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia2.0', 'glia2.0',
       'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0',
       'glia2.0', 'glia3.0', 'neuron', 'glia2.0', 'neuron', 'glia1.0',
       'glia3.0', 'glia1.0', 'glia2.0', 'glia1.0', 'glia2.0', 'glia2.0',
       'glia2.0', 'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0', 'neuron',
       'neuron', 'glia1.0', 'glia1.0', 'neuron', 'neuron', 'glia2.0',
       'neuron', 'neuron', 'glia1.0', 'neuron', 'glia3.0', 'neuron',
       'glia2.0', 'neuron', 'neuron', 'neuron', 'neuron', 'neuron',
       'glia2.0', 'glia1.0', 'neuron', 'neuron', 'neuron', 'glia1.0',
       'neuron', 'neuron', 'neuron', 'neuron', 'glia2.0', 'neuron',
       'neuron', 'neuron', 'neuron', 'neuron', 'neuron', 'neuron',
       'neuron', 'neuron', 'glia2.0', 'neuron', 'neuron', 'neuron',
       'glia2.0', 'neuron', 'neuron', 'neuron', 'glia1.0', 'neuron',
       'neuron', 'neuron', 'neuron', 'neuron', 'neuron', 'glia1.0',
       'neuron', 'neuron', 'neuron', 'glia2.0', 'neuron', 'neuron',
       'neuron', 'neuron', 'neuron', 'neuron', 'neuron', 'glia2.0',
       'neuron', 'glia3.0', 'neuron', 'glia3.0', 'glia1.0', 'glia1.0',
       'neuron', 'glia3.0', 'glia2.0', 'neuron', 'neuron', 'glia3.0',
       'glia1.0', 'neuron', 'neuron', 'glia2.0', 'unknown', 'neuron',
       'neuron', 'glia1.0', 'neuron', 'neuron', 'neuron', 'glia1.0',
       'glia1.0', 'glia1.0', 'neuron', 'neuron', 'neuron', 'neuron',
       'neuron', 'neuron', 'neuron', 'glia2.0', 'glia3.0', 'glia3.0',
       'neuron', 'glia1.0', 'glia2.0', 'neuron', 'glia3.0', 'neuron',
       'neuron', 'neuron', 'neuron', 'glia1.0', 'glia2.0', 'neuron',
       'neuron', 'neuron', 'neuron', 'neuron', 'glia3.0', 'glia3.0',
       'glia1.0', 'neuron', 'glia2.0', 'neuron', 'glia1.0', 'glia1.0',
       'glia3.0', 'neuron', 'glia1.0', 'neuron', 'glia3.0', 'neuron',
       'glia2.0', 'glia3.0', 'glia3.0', 'neuron', 'neuron', 'glia3.0',
       'neuron', 'glia3.0', 'neuron', 'neuron', 'glia3.0', 'neuron',
       'neuron', 'neuron', 'neuron', 'neuron', 'neuron', 'glia2.0',
       'neuron', 'neuron', 'neuron', 'glia3.0', 'neuron', 'glia1.0',
       'glia1.0', 'neuron', 'neuron', 'neuron', 'neuron', 'glia1.0',
       'neuron', 'glia2.0', 'glia3.0', 'neuron', 'neuron', 'neuron',
       'neuron', 'glia3.0', 'neuron', 'neuron', 'neuron', 'glia1.0',
       'neuron', 'glia2.0', 'glia2.0', 'neuron', 'neuron', 'neuron',
       'neuron', 'glia1.0', 'neuron', 'neuron', 'neuron', 'glia2.0',
       'neuron', 'neuron', 'glia1.0', 'glia2.0', 'glia2.0', 'neuron',
       'neuron', 'glia1.0', 'neuron', 'neuron', 'neuron', 'glia3.0',
       'glia3.0', 'neuron', 'neuron', 'neuron', 'glia3.0', 'glia3.0',
       'neuron', 'neuron', 'neuron', 'neuron', 'glia2.0', 'glia3.0',
       'neuron', 'neuron', 'neuron', 'glia1.0', 'glia2.0', 'neuron',
       'glia1.0', 'neuron', 'neuron', 'glia2.0', 'glia3.0', 'glia3.0',
       'glia2.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia2.0',
       'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0',
       'unknown', 'glia3.0', 'glia2.0', 'glia2.0', 'glia3.0', 'glia3.0',
       'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0',
       'glia2.0', 'glia3.0', 'glia3.0', 'glia2.0', 'glia3.0', 'glia3.0',
       'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0',
       'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0', 'glia3.0',
       'glia3.0', 'glia3.0', 'glia3.0', 'neuron', 'neuron', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0', 'glia1.0',
       'glia3.0', 'glia1.0', 'glia3.0', 'glia1.0', 'glia1.0', 'glia1.0',
       'glia2.0', 'glia2.0', 'glia1.0', 'glia2.0', 'glia1.0', 'glia1.0',
       'glia2.0', 'glia1.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'neuron', 'glia2.0', 'neuron', 'glia2.0',
       'glia2.0', 'glia1.0', 'neuron', 'glia2.0', 'glia2.0', 'glia2.0',
       'neuron', 'glia1.0', 'glia1.0', 'glia1.0', 'glia2.0', 'neuron',
       'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'neuron', 'glia2.0', 'glia2.0',
       'glia3.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia3.0', 'glia2.0',
       'glia2.0', 'glia1.0', 'glia1.0', 'neuron', 'glia2.0', 'glia3.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'neuron', 'glia2.0', 'neuron',
       'glia2.0', 'neuron', 'neuron', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia1.0', 'glia1.0', 'neuron', 'glia2.0', 'glia2.0', 'glia1.0',
       'glia3.0', 'neuron', 'glia1.0', 'glia2.0', 'glia1.0', 'glia1.0',
       'glia1.0', 'glia2.0', 'glia3.0', 'glia1.0', 'glia3.0', 'glia2.0',
       'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'neuron', 'glia2.0', 'glia1.0', 'glia1.0', 'glia3.0', 'glia1.0',
       'glia2.0', 'glia2.0', 'neuron', 'glia2.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'neuron', 'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0',
       'neuron', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'neuron',
       'glia1.0', 'glia2.0', 'glia3.0', 'glia1.0', 'glia2.0', 'glia2.0',
       'glia1.0', 'glia1.0', 'neuron', 'glia2.0', 'glia2.0', 'neuron',
       'glia1.0', 'glia2.0', 'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia2.0', 'glia1.0', 'glia3.0', 'glia2.0', 'neuron', 'glia2.0',
       'glia2.0', 'glia1.0', 'glia1.0', 'glia1.0', 'glia2.0', 'glia2.0',
       'glia1.0', 'glia2.0', 'glia1.0', 'glia1.0', 'glia2.0', 'glia1.0',
       'glia2.0', 'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'neuron', 'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0',
       'neuron', 'glia2.0', 'glia3.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia3.0', 'glia3.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0', 'neuron', 'glia1.0',
       'glia2.0', 'neuron', 'glia2.0', 'neuron', 'glia1.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'glia1.0', 'glia2.0', 'glia1.0', 'glia2.0', 'glia1.0',
       'glia2.0', 'neuron', 'glia2.0', 'glia1.0', 'glia1.0', 'glia2.0',
       'glia3.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'glia1.0',
       'glia2.0', 'glia1.0', 'glia2.0', 'glia1.0', 'glia1.0', 'neuron',
       'glia2.0', 'glia2.0', 'glia1.0', 'glia2.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0', 'neuron', 'glia2.0',
       'glia3.0', 'glia1.0', 'glia2.0', 'glia1.0', 'glia2.0', 'glia1.0',
       'glia2.0', 'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'neuron', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia1.0',
       'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia1.0', 'glia1.0', 'glia1.0', 'glia2.0', 'glia2.0', 'glia2.0',
       'glia3.0', 'glia2.0', 'neuron', 'glia1.0', 'glia2.0', 'glia2.0',
       'glia2.0', 'glia1.0', 'glia2.0', 'glia1.0', 'glia1.0', 'glia2.0',
       'glia2.0', 'neuron'])
    
    adata.X = scipy.sparse.csr_matrix(adata.X)

    return adata  # your load function needs to return an AnnData object
